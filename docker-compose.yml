version: "3.4"
services:

  qbittorrent:
    image: dyonr/qbittorrentvpn:latest
    container_name: qbittorrent
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - VPN_ENABLED=yes
      - VPN_TYPE=wireguard
      - LAN_NETWORK=192.168.0.0/24,192.168.86.0/24
    cap_add:
        - NET_ADMIN
    sysctls:
        net.ipv4.conf.all.src_valid_mark: 1
        net.ipv6.conf.all.disable_ipv6: 0
    volumes:
      - ${ROOT}/config:/config
      - ${SECOND}/downloads:/downloads
    ports:
      - 8080:8080

  flaresolverr:
    # DockerHub mirror flaresolverr/flaresolverr:latest
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    network_mode: host
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - TZ=America/New_York
    restart: unless-stopped

  jackett:
    container_name: jackett
    image: linuxserver/jackett:latest
    restart: unless-stopped
    network_mode: host
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${SECOND}/downloads/torrent-blackhole:/downloads # place where to put .torrent files for manual download
      - ${ROOT}/config/jackett:/config # config files

  sonarr:
    container_name: sonarr
    image: linuxserver/sonarr:latest
    restart: unless-stopped
    network_mode: host
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${ROOT}/config/sonarr:/config # config files
      - ${ROOT}/complete/tv:/tv # tv shows folder
      - ${SECOND}/downloads:/downloads # download folder
      - ${SECOND}/complete/tv:/tv2
  radarr:
    container_name: radarr
    image: linuxserver/radarr:latest
    restart: unless-stopped
    network_mode: host
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${ROOT}/config/radarr:/config # config files
      - ${ROOT}/complete/movies:/movies # movies folder
      - ${SECOND}/downloads:/downloads # download folder
      - ${SECOND}/complete/movies:/movies2

#  plex-server:
#    container_name: plex-server
#    image: lscr.io/linuxserver/plex:latest
#    restart: unless-stopped
#    environment:
#      - TZ=${TZ} # timezone, defined in .env
#      - PUID=${PUID}
#      - PGID=${PGID}
#      - VERSION=docker
#    network_mode: host
#    volumes:
#      - ${ROOT}/config/plex/db:/config # plex database
#      - ${ROOT}/config/plex/transcode:/transcode # temp transcoded files
#      - ${ROOT}/complete:/data # media library
#      - ${SECOND}/complete:/data2


  jellyfin:
    container_name: jellyfin
    restart: unless-stopped
    image: jellyfin/jellyfin:latest
    user: ${PUID}:${PGID}
    group_add:
      - 109 # render
      - 44 # video
    network_mode: host
    volumes:
      - ${ROOT}/config/jellyfin/:/config # plex database
      - ${ROOT}/cache/jellyfin/:/cache
      - ${ROOT}/complete:/media # media library
      - ${SECOND}/complete:/media2
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]
